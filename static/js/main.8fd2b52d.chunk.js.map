{"version":3,"sources":["components/Header/Header.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","contextRef","createRef","ref","wrapperStyle","height","style","WebkitTransition","MozTransition","OTransition","Transition","backgroundColor","className","Grid","Row","Column","width","to","React","Component","Home","centered","columns","as","image","content","Card","Image","src","wrapped","ui","Content","Meta","Description","extra","Label","color","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8fd2b52d.chunk.js","sourcesContent":["import React, { createRef } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Headeroom from 'react-headroom';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\nclass Header extends React.Component {\n\trender() {\n\t\tconst contextRef = createRef();\n\n\t\treturn (\n\t\t\t<div ref={contextRef}>\n\t\t\t\t<Headeroom\n\t\t\t\t\twrapperStyle={{ height: '50px' }}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tWebkitTransition: 'all .5s ease-in-out',\n\t\t\t\t\t\tMozTransition: 'all .5s ease-in-out',\n\t\t\t\t\t\tOTransition: 'all .5s ease-in-out',\n\t\t\t\t\t\tTransition: 'all .5s ease-in-out',\n\t\t\t\t\t\tbackgroundColor: '#00020b'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"top\">\n\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t\t<Grid.Column width={8}>\n\t\t\t\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t\t\t\t<span>Mineru Coding</span> <span>Blog</span>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</div>\n\t\t\t\t</Headeroom>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React from 'react';\nimport { Grid, Header, Image, Card, Label, Accordion } from 'semantic-ui-react';\nimport './Home.css';\n\nclass Home extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"home_background\">\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<Grid.Row centered columns={3}>\n\t\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t\t<h1>> Hello, World!</h1>\n\t\t\t\t\t\t\t\t<h1>> This is Mineru Coding Blog.</h1>\n\t\t\t\t\t\t\t\t<h1>> </h1>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"home_container\">\n\t\t\t\t\t<Header as=\"h2\" image=\"/img/project.svg\" content=\"Project\" />\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<Grid.Row columns={4}>\n\t\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\tsrc=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n\t\t\t\t\t\t\t\t\t\twrapped\n\t\t\t\t\t\t\t\t\t\tui={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t\t\t\t<Card.Header>Auto Bench</Card.Header>\n\t\t\t\t\t\t\t\t\t\t<Card.Meta>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"date\">Deployed Apr 7, 2019</span>\n\t\t\t\t\t\t\t\t\t\t</Card.Meta>\n\t\t\t\t\t\t\t\t\t\t<Card.Description>Matthew is a musician living in Nashville.</Card.Description>\n\t\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t\t\t<Card.Content extra>\n\t\t\t\t\t\t\t\t\t\t<Label as=\"a\" color=\"white\" image>\n\t\t\t\t\t\t\t\t\t\t\t<Image src=\"img/icon_python.png\" />\n\t\t\t\t\t\t\t\t\t\t\tPython\n\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\tsrc=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n\t\t\t\t\t\t\t\t\t\twrapped\n\t\t\t\t\t\t\t\t\t\tui={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t\t\t\t<Card.Header>Korea Mock Test Bot</Card.Header>\n\t\t\t\t\t\t\t\t\t\t<Card.Meta>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"date\">Deployed Sep 12, 2019</span>\n\t\t\t\t\t\t\t\t\t\t</Card.Meta>\n\t\t\t\t\t\t\t\t\t\t<Card.Description>Korea Mock Test Bot Result Searching </Card.Description>\n\t\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t\t\t<Card.Content extra>\n\t\t\t\t\t\t\t\t\t\t<Label as=\"a\" color=\"white\" image>\n\t\t\t\t\t\t\t\t\t\t\t<Image src=\"img/icon_python.png\" />\n\t\t\t\t\t\t\t\t\t\t\tPython\n\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\tsrc=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n\t\t\t\t\t\t\t\t\t\twrapped\n\t\t\t\t\t\t\t\t\t\tui={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t\t\t\t<Card.Header>Noticend.com</Card.Header>\n\t\t\t\t\t\t\t\t\t\t<Card.Meta>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"date\">Deployed March 20, 2018</span>\n\t\t\t\t\t\t\t\t\t\t</Card.Meta>\n\t\t\t\t\t\t\t\t\t\t<Card.Description>Matthew is a musician living in Nashville.</Card.Description>\n\t\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t\t\t<Card.Content extra>\n\t\t\t\t\t\t\t\t\t\t<Label as=\"a\" color=\"white\" image>\n\t\t\t\t\t\t\t\t\t\t\t<Image src=\"img/icon_xamarin.png\" />\n\t\t\t\t\t\t\t\t\t\t\tXamarin.forms\n\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\tsrc=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n\t\t\t\t\t\t\t\t\t\twrapped\n\t\t\t\t\t\t\t\t\t\tui={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t\t\t\t<Card.Header>www.cnaplus.shop</Card.Header>\n\t\t\t\t\t\t\t\t\t\t<Card.Meta>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"date\">Deployed June 9, 2019</span>\n\t\t\t\t\t\t\t\t\t\t</Card.Meta>\n\t\t\t\t\t\t\t\t\t\t<Card.Description>Matthew is a musician living in Nashville.</Card.Description>\n\t\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t\t\t<Card.Content extra>\n\t\t\t\t\t\t\t\t\t\t<Label as=\"a\" color=\"white\" image>\n\t\t\t\t\t\t\t\t\t\t\t<Image src=\"img/icon_kotlin.png\" />\n\t\t\t\t\t\t\t\t\t\t\tKotlin\n\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Header as=\"h2\" image=\"/img/language.svg\" content=\"Language\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;","import 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<div className=\"article-container\">\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Route exact path=\"/\" component={Home}/>\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}